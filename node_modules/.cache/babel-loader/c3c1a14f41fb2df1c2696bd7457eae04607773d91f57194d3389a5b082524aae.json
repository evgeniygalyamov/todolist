{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  todolistID,\n  title,\n  tasks,\n  filteredTasks,\n  removeTask,\n  changeStatusTask,\n  addTask,\n  removeTodolist\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [filterBtn, setFilterBtn] = useState(\"all\");\n  const tasksList = tasks.length ? tasks.map(t => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: t.isDone ? \"isDone\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: t.isDone,\n        onChange: e => changeStatusTaskHandler(t.id, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removeTask(todolistID, t.id),\n        title: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Todolist required\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n  const filteredTaskAll = filterValue => {\n    filteredTasks(todolistID, filterValue);\n    setFilterBtn(filterValue);\n  };\n  const changeStatusTaskHandler = (taskId, e) => {\n    changeStatusTask(todolistID, taskId, e.currentTarget.checked);\n  };\n  const addTaskHandler = () => {\n    if (newTask.trim()) {\n      addTask(todolistID, newTask.trim());\n      setNewTask(\"\");\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyInputHandler = e => {\n    if (e.key === \"Enter\") {\n      addTask(todolistID, newTask);\n      setNewTask(\"\");\n    }\n  };\n  const onChangeInputHandler = e => {\n    if (e.currentTarget) {\n      setNewTask(e.currentTarget.value);\n      setError(false);\n    }\n  };\n  const removeTodolistHandler = todolistID => {\n    removeTodolist(todolistID);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [title, /*#__PURE__*/_jsxDEV(Button, {\n        title: \"x\",\n        onClick: removeTodolistHandler(todolistID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTask,\n        onChange: onChangeInputHandler,\n        onKeyDown: onKeyInputHandler,\n        className: error ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\",\n        onClick: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"errorMessage\",\n        children: \"input is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"all\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"all\"),\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"active\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"active\"),\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"completed\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"completed\"),\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"6X8nlS3b0NCApy6yk36Qqe380S4=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Todolist","todolistID","title","tasks","filteredTasks","removeTask","changeStatusTask","addTask","removeTodolist","_s","newTask","setNewTask","error","setError","filterBtn","setFilterBtn","tasksList","length","map","t","className","isDone","children","type","checked","onChange","e","changeStatusTaskHandler","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filteredTaskAll","filterValue","taskId","currentTarget","addTaskHandler","trim","onKeyInputHandler","key","onChangeInputHandler","value","removeTodolistHandler","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\nimport {Button} from \"./Button\";\nimport {FilteredTasksType, TasksType} from \"./App\";\n\ntype TodolistType = {\n    todolistID: string\n    title: string\n    tasks: TasksType[]\n    filteredTasks: (todolistID: string, filterValue: FilteredTasksType) => void\n    removeTask: (todolistID: string, taskId: string) => void\n    changeStatusTask: (todolistID: string, taskId: string, isDone: boolean) => void\n    addTask: (todolistID: string, title: string) => void\n    removeTodolist:(todolistID:string) => void\n}\n\n\nexport const Todolist = ({\n                             todolistID,\n                             title,\n                             tasks,\n                             filteredTasks,\n                             removeTask,\n                             changeStatusTask,\n                             addTask,\n                             removeTodolist,\n                         }: TodolistType) => {\n\n    const [newTask, setNewTask] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [filterBtn, setFilterBtn] = useState(\"all\")\n\n\n    const tasksList = tasks.length\n        ? tasks.map(t => {\n                return (\n                    <li key={t.id} className={t.isDone ? \"isDone\" : \"\"}>\n                        <input type=\"checkbox\" checked={t.isDone}\n                               onChange={(e) => changeStatusTaskHandler(t.id, e)}/>\n                        <span>{t.title}</span>\n                        <Button onClick={() => removeTask(todolistID, t.id)} title={\"x\"}/>\n                    </li>\n                )\n            }\n        ) : <div>Todolist required</div>\n\n    const filteredTaskAll = (filterValue: FilteredTasksType) => {\n        filteredTasks(todolistID, filterValue)\n        setFilterBtn(filterValue)\n    }\n    const changeStatusTaskHandler = (taskId: string, e: ChangeEvent<HTMLInputElement>) => {\n        changeStatusTask(todolistID, taskId, e.currentTarget.checked)\n    }\n    const addTaskHandler = () => {\n        if (newTask.trim()) {\n            addTask(todolistID, newTask.trim())\n            setNewTask(\"\")\n        } else {\n            setError(true)\n        }\n    }\n    const onKeyInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addTask(todolistID, newTask)\n            setNewTask(\"\")\n        }\n    }\n    const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget) {\n            setNewTask(e.currentTarget.value)\n            setError(false)\n        }\n    }\n\n    const removeTodolistHandler = (todolistID: string) => {\n        removeTodolist(todolistID)\n    }\n\n\n    return (\n        <div>\n            <h3>{title}\n                <Button title={\"x\"} onClick={removeTodolistHandler(todolistID)}/>\n            </h3>\n            <div>\n                <input value={newTask}\n                       onChange={onChangeInputHandler}\n                       onKeyDown={onKeyInputHandler}\n                       className={error ? \"error\" : \"\"}\n                />\n                <Button title={\"+\"} onClick={addTaskHandler}/>\n                {error && <h4 className={\"errorMessage\"}>input is empty</h4>}\n            </div>\n            <ul>\n                {tasksList}\n            </ul>\n            <div>\n                <Button className={filterBtn === \"all\" ? \"filteredBtn\" : \"\"} onClick={() => filteredTaskAll(\"all\")}\n                        title={\"All\"}/>\n                <Button className={filterBtn === \"active\" ? \"filteredBtn\" : \"\"}\n                        onClick={() => filteredTaskAll(\"active\")} title={\"Active\"}/>\n                <Button className={filterBtn === \"completed\" ? \"filteredBtn\" : \"\"}\n                        onClick={() => filteredTaskAll(\"completed\")} title={\"Completed\"}/>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}