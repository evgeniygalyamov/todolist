{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { AddItemInput } from \"./AddItemInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  todolistID,\n  title,\n  tasks,\n  filteredTasks,\n  removeTask,\n  changeStatusTask,\n  addTask,\n  removeTodolist\n}) => {\n  _s();\n  const [filterBtn, setFilterBtn] = useState(\"all\");\n  const tasksList = tasks.length ? tasks.map(t => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: t.isDone ? \"isDone\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: t.isDone,\n        onChange: e => changeStatusTaskHandler(t.id, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removeTask(todolistID, t.id),\n        title: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Todolist required\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n  const filteredTaskAll = filterValue => {\n    filteredTasks(todolistID, filterValue);\n    setFilterBtn(filterValue);\n  };\n  const changeStatusTaskHandler = (taskId, e) => {\n    changeStatusTask(todolistID, taskId, e.currentTarget.checked);\n  };\n  const addTaskHandler = newItem => {\n    if (newItem.trim()) {\n      addTask(todolistID, newItem);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [title, /*#__PURE__*/_jsxDEV(Button, {\n        title: \"x\",\n        onClick: () => removeTodolist(todolistID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddItemInput, {\n      addItem: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"all\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"all\"),\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"active\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"active\"),\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"completed\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"completed\"),\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n_s(Todolist, \"4ewqcBr5fSr8hAvYqb9ch/SyBto=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","AddItemInput","jsxDEV","_jsxDEV","Todolist","todolistID","title","tasks","filteredTasks","removeTask","changeStatusTask","addTask","removeTodolist","_s","filterBtn","setFilterBtn","tasksList","length","map","t","className","isDone","children","type","checked","onChange","e","changeStatusTaskHandler","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filteredTaskAll","filterValue","taskId","currentTarget","addTaskHandler","newItem","trim","addItem","_c","$RefreshReg$"],"sources":["/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\nimport {Button} from \"./Button\";\nimport {FilteredTasksType, TasksType} from \"./App\";\nimport {AddItemInput} from \"./AddItemInput\";\n\ntype TodolistType = {\n    todolistID: string\n    title: string\n    tasks: TasksType[]\n    filteredTasks: (todolistID: string, filterValue: FilteredTasksType) => void\n    removeTask: (todolistID: string, taskId: string) => void\n    changeStatusTask: (todolistID: string, taskId: string, isDone: boolean) => void\n    addTask: (todolistID: string, title: string) => void\n    removeTodolist: (todolistID: string) => void\n}\n\n\nexport const Todolist = ({\n                             todolistID,\n                             title,\n                             tasks,\n                             filteredTasks,\n                             removeTask,\n                             changeStatusTask,\n                             addTask,\n                             removeTodolist,\n                         }: TodolistType) => {\n\n\n    const [filterBtn, setFilterBtn] = useState(\"all\")\n\n\n    const tasksList = tasks.length\n        ? tasks.map(t => {\n                return (\n                    <li key={t.id} className={t.isDone ? \"isDone\" : \"\"}>\n                        <input type=\"checkbox\" checked={t.isDone}\n                               onChange={(e) => changeStatusTaskHandler(t.id, e)}/>\n                        <span>{t.title}</span>\n                        <Button onClick={() => removeTask(todolistID, t.id)} title={\"x\"}/>\n                    </li>\n                )\n            }\n        ) : <div>Todolist required</div>\n\n    const filteredTaskAll = (filterValue: FilteredTasksType) => {\n        filteredTasks(todolistID, filterValue)\n        setFilterBtn(filterValue)\n    }\n    const changeStatusTaskHandler = (taskId: string, e: ChangeEvent<HTMLInputElement>) => {\n        changeStatusTask(todolistID, taskId, e.currentTarget.checked)\n    }\n    const addTaskHandler = (newItem: string) => {\n        if (newItem.trim()) {\n            addTask(todolistID, newItem)\n        }\n}\n\n        return (\n            <div>\n                <h3>{title}\n                    <Button title={\"x\"} onClick={() => removeTodolist(todolistID)}/>\n                </h3>\n                <AddItemInput addItem={addTaskHandler}/>\n                <ul>\n                    {tasksList}\n                </ul>\n                <div>\n                    <Button className={filterBtn === \"all\" ? \"filteredBtn\" : \"\"} onClick={() => filteredTaskAll(\"all\")}\n                            title={\"All\"}/>\n                    <Button className={filterBtn === \"active\" ? \"filteredBtn\" : \"\"}\n                            onClick={() => filteredTaskAll(\"active\")} title={\"Active\"}/>\n                    <Button className={filterBtn === \"completed\" ? \"filteredBtn\" : \"\"}\n                            onClick={() => filteredTaskAll(\"completed\")} title={\"Completed\"}/>\n                </div>\n            </div>\n        )\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}