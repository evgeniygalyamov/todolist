{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/AddItemInput.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from \"./Button\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddItemInput = ({\n  itemTitle\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const addTaskHandler = () => {\n    if (newTask.trim()) {\n      itemTitle(title.trim());\n      setNewTask(\"\");\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyInputHandler = e => {\n    if (e.key === \"Enter\") {\n      addItem(title.trim());\n      setNewTask(\"\");\n    }\n  };\n  const onChangeInputHandler = e => {\n    if (e.currentTarget) {\n      setNewTask(e.currentTarget.value);\n      setError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: onChangeInputHandler,\n      onKeyDown: onKeyInputHandler,\n      className: error ? \"error\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"+\",\n      onClick: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"errorMessage\",\n      children: \"input is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(AddItemInput, \"RdprdCd9SyCrl/01pRUU2vklULk=\");\n_c = AddItemInput;\nvar _c;\n$RefreshReg$(_c, \"AddItemInput\");","map":{"version":3,"names":["Button","React","useState","jsxDEV","_jsxDEV","AddItemInput","itemTitle","_s","newTask","setNewTask","error","setError","addTaskHandler","trim","title","onKeyInputHandler","e","key","addItem","onChangeInputHandler","currentTarget","value","children","onChange","onKeyDown","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/AddItemInput.tsx"],"sourcesContent":["import {Button} from \"./Button\";\nimport React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\n\n\ntype AddItemInputType = {\n    itemTitle: string,\n\n}\n\n\nexport const AddItemInput = ({itemTitle}: AddItemInputType)=> {\n\n    const [newTask, setNewTask] = useState(\"\")\n    const [error, setError] = useState(false)\n\n    const addTaskHandler = () => {\n        if (newTask.trim()) {\n            itemTitle(title.trim())\n            setNewTask(\"\")\n        } else {\n            setError(true)\n        }\n    }\n    const onKeyInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addItem(title.trim())\n            setNewTask(\"\")\n        }\n    }\n    const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget) {\n            setNewTask(e.currentTarget.value)\n            setError(false)\n        }\n    }\n\n    return (\n        <div>\n            <input value={newTask}\n                   onChange={onChangeInputHandler}\n                   onKeyDown={onKeyInputHandler}\n                   className={error ? \"error\" : \"\"}\n            />\n            <Button title={\"+\"} onClick={addTaskHandler}/>\n            {error && <h4 className={\"errorMessage\"}>input is empty</h4>}\n        </div>\n    )\n}"],"mappings":";;AAAA,SAAQA,MAAM,QAAO,UAAU;AAC/B,OAAOC,KAAK,IAA+BC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAA2B,CAAC,KAAI;EAAAC,EAAA;EAE1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMU,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MAChBP,SAAS,CAACQ,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC;MACvBJ,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACHE,QAAQ,CAAC,IAAI,CAAC;IAClB;EACJ,CAAC;EACD,MAAMI,iBAAiB,GAAIC,CAAkC,IAAK;IAC9D,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBC,OAAO,CAACJ,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC;MACrBJ,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EACD,MAAMU,oBAAoB,GAAIH,CAAgC,IAAK;IAC/D,IAAIA,CAAC,CAACI,aAAa,EAAE;MACjBX,UAAU,CAACO,CAAC,CAACI,aAAa,CAACC,KAAK,CAAC;MACjCV,QAAQ,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAOiB,KAAK,EAAEb,OAAQ;MACfe,QAAQ,EAAEJ,oBAAqB;MAC/BK,SAAS,EAAET,iBAAkB;MAC7BU,SAAS,EAAEf,KAAK,GAAG,OAAO,GAAG;IAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFzB,OAAA,CAACJ,MAAM;MAACc,KAAK,EAAE,GAAI;MAACgB,OAAO,EAAElB;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC7CnB,KAAK,iBAAIN,OAAA;MAAIqB,SAAS,EAAE,cAAe;MAAAH,QAAA,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd,CAAC;AAAAtB,EAAA,CArCYF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}