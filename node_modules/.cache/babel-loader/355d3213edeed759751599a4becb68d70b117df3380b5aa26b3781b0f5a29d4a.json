{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Desktop/1-todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  filteredTasks,\n  removeTask,\n  changeStatusTask,\n  addTask\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const filteredTaskAll = filterValue => {\n    filteredTasks(filterValue);\n  };\n  const changeStatusTaskHandler = (taskId, e) => {\n    changeStatusTask(taskId, e.currentTarget.checked);\n  };\n  const addTaskHandler = () => {\n    addTask(newTask);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          if (e.currentTarget) {\n            setNewTask(e.currentTarget.value);\n            e.currentTarget.value === \"\";\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\",\n        onClick: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.length ? tasks.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone,\n            onChange: e => changeStatusTaskHandler(t.id, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => removeTask(t.id),\n            title: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Todolist required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"all\"),\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"active\"),\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"completed\"),\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"4D3TTGns9x2jT45i0XsiEmEZ47k=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Todolist","title","tasks","filteredTasks","removeTask","changeStatusTask","addTask","_s","newTask","setNewTask","filteredTaskAll","filterValue","changeStatusTaskHandler","taskId","e","currentTarget","checked","addTaskHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","onClick","length","map","t","type","isDone","id","_c","$RefreshReg$"],"sources":["/Users/galyamov/Desktop/1-todolist/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\nimport {Button} from \"./Button\";\nimport {FilteredTasksType} from \"./App\";\n\ntype TodolistType = {\n    title: string\n    tasks: TasksType[]\n    filteredTasks: (filterValue: FilteredTasksType) => void\n    removeTask: (taskId: number) => void\n    changeStatusTask: (taskId: number, isDone: boolean) => void\n    addTask: (title: string) => void\n}\n\nexport type TasksType = {\n    id: number\n    title: string\n    isDone: boolean\n}\n\n\nexport const Todolist = ({title, tasks, filteredTasks, removeTask, changeStatusTask, addTask}: TodolistType) => {\n\n    const [newTask, setNewTask] = useState(\"\")\n\n    const filteredTaskAll = (filterValue: FilteredTasksType) => {\n        filteredTasks(filterValue)\n    }\n    const changeStatusTaskHandler = (taskId: number, e: ChangeEvent<HTMLInputElement>) => {\n        changeStatusTask(taskId, e.currentTarget.checked)\n    }\n    const addTaskHandler = () => {\n        addTask(newTask)\n    }\n\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input onChange={(e) => {\n                    if (e.currentTarget) {\n                        setNewTask(e.currentTarget.value)\n                        e.currentTarget.value === \"\"\n                    }\n                }}/>\n                <Button title={\"+\"} onClick={addTaskHandler}/>\n            </div>\n            <ul>\n                {tasks.length\n                    ? tasks.map(t => {\n                            return (\n                                <li key={t.id}>\n                                    <input type=\"checkbox\" checked={t.isDone}\n                                           onChange={(e) => changeStatusTaskHandler(t.id, e)}/>\n                                    <span>{t.title}</span>\n                                    <Button onClick={() => removeTask(t.id)} title={\"x\"}/>\n                                </li>\n                            )\n                        }\n                    ) : <div>Todolist required</div>\n                }\n            </ul>\n            <div>\n                <Button onClick={() => filteredTaskAll(\"all\")} title={\"All\"}/>\n                <Button onClick={() => filteredTaskAll(\"active\")} title={\"Active\"}/>\n                <Button onClick={() => filteredTaskAll(\"completed\")} title={\"Completed\"}/>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAClD,SAAQC,MAAM,QAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBhC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAACC,KAAK;EAAEC,KAAK;EAAEC,aAAa;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EAE5G,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,eAAe,GAAIC,WAA8B,IAAK;IACxDR,aAAa,CAACQ,WAAW,CAAC;EAC9B,CAAC;EACD,MAAMC,uBAAuB,GAAGA,CAACC,MAAc,EAAEC,CAAgC,KAAK;IAClFT,gBAAgB,CAACQ,MAAM,EAAEC,CAAC,CAACC,aAAa,CAACC,OAAO,CAAC;EACrD,CAAC;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBX,OAAO,CAACE,OAAO,CAAC;EACpB,CAAC;EAGD,oBACIT,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAKjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBvB,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAOwB,QAAQ,EAAGT,CAAC,IAAK;UACpB,IAAIA,CAAC,CAACC,aAAa,EAAE;YACjBN,UAAU,CAACK,CAAC,CAACC,aAAa,CAACS,KAAK,CAAC;YACjCV,CAAC,CAACC,aAAa,CAACS,KAAK,KAAK,EAAE;UAChC;QACJ;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACJvB,OAAA,CAACF,MAAM;QAACI,KAAK,EAAE,GAAI;QAACwB,OAAO,EAAER;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNvB,OAAA;MAAAmB,QAAA,EACKhB,KAAK,CAACwB,MAAM,GACPxB,KAAK,CAACyB,GAAG,CAACC,CAAC,IAAI;QACT,oBACI7B,OAAA;UAAAmB,QAAA,gBACInB,OAAA;YAAO8B,IAAI,EAAC,UAAU;YAACb,OAAO,EAAEY,CAAC,CAACE,MAAO;YAClCP,QAAQ,EAAGT,CAAC,IAAKF,uBAAuB,CAACgB,CAAC,CAACG,EAAE,EAAEjB,CAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC3DvB,OAAA;YAAAmB,QAAA,EAAOU,CAAC,CAAC3B;UAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBvB,OAAA,CAACF,MAAM;YAAC4B,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACwB,CAAC,CAACG,EAAE,CAAE;YAAC9B,KAAK,EAAE;UAAI;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA,GAJjDM,CAAC,CAACG,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKT,CAAC;MAEb,CACJ,CAAC,gBAAGvB,OAAA;QAAAmB,QAAA,EAAK;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC,CAAC,eACLvB,OAAA;MAAAmB,QAAA,gBACInB,OAAA,CAACF,MAAM;QAAC4B,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAAC,KAAK,CAAE;QAACT,KAAK,EAAE;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9DvB,OAAA,CAACF,MAAM;QAAC4B,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAAC,QAAQ,CAAE;QAACT,KAAK,EAAE;MAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpEvB,OAAA,CAACF,MAAM;QAAC4B,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAAC,WAAW,CAAE;QAACT,KAAK,EAAE;MAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAf,EAAA,CAjDYP,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}