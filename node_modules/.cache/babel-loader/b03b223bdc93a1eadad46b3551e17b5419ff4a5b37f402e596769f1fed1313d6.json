{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Desktop/1-todolist/src/Todolist.tsx\";\nimport React from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  filteredTasks,\n  removeTask\n}) => {\n  const filteredTaskAll = filterValue => {\n    filteredTasks(filterValue);\n  };\n  const removeTaskHandler = () => {\n    removeTask();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.length ? tasks.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: removeTaskHandler,\n            title: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Todolist required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"all\"),\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"active\"),\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"completed\"),\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Todolist","title","tasks","filteredTasks","removeTask","filteredTaskAll","filterValue","removeTaskHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","t","type","checked","isDone","onClick","id","_c","$RefreshReg$"],"sources":["/Users/galyamov/Desktop/1-todolist/src/Todolist.tsx"],"sourcesContent":["import React from \"react\";\nimport {Button} from \"./Button\";\nimport {FilteredTasksType} from \"./App\";\n\ntype TodolistType = {\n    title: string\n    tasks: TasksType[]\n    filteredTasks: (filterValue: FilteredTasksType) => void\n    removeTask: (taskId: number) => void\n}\n\nexport type TasksType = {\n    id: number\n    title: string\n    isDone: boolean\n}\n\n\nexport const Todolist = ({title, tasks, filteredTasks, removeTask}: TodolistType) => {\n\n    const filteredTaskAll = (filterValue: FilteredTasksType) => {\n        filteredTasks(filterValue)\n    }\n    const removeTaskHandler = () => {\n        removeTask()\n    }\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input/>\n                <Button title={\"+\"}/>\n            </div>\n            <ul>\n                {tasks.length\n                    ? tasks.map(t => {\n                            return (\n                                <li key={t.id}>\n                                    <input type=\"checkbox\" checked={t.isDone}/>\n                                    <span>{t.title}</span>\n                                    <Button onClick={removeTaskHandler} title={\"x\"}/>\n                                </li>\n                            )\n                        }\n                    ) : <div>Todolist required</div>\n                }\n            </ul>\n            <div>\n                <Button onClick={() => filteredTaskAll(\"all\")} title={\"All\"}/>\n                <Button onClick={() => filteredTaskAll(\"active\")} title={\"Active\"}/>\n                <Button onClick={() => filteredTaskAll(\"completed\")} title={\"Completed\"}/>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}