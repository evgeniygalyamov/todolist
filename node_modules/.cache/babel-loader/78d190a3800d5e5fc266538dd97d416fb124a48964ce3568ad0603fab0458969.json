{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  filteredTasks,\n  removeTask,\n  changeStatusTask,\n  addTask\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [filterBtn, setFilterBtn] = useState(\"all\");\n  const tasksList = tasks.length ? tasks.map(t => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: t.isDone ? \"isDone\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: t.isDone,\n        onChange: e => changeStatusTaskHandler(t.id, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removeTask(t.id),\n        title: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Todolist required\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n  const filteredTaskAll = filterValue => {\n    filteredTasks(filterValue);\n    setFilterBtn(filterValue);\n  };\n  const changeStatusTaskHandler = (taskId, e) => {\n    changeStatusTask(taskId, e.currentTarget.checked);\n  };\n  const addTaskHandler = () => {\n    if (newTask.trim()) {\n      addTask(newTask.trim());\n      setNewTask(\"\");\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyInputHandler = e => {\n    if (e.key === \"Enter\") {\n      addTask(newTask);\n      setNewTask(\"\");\n    }\n  };\n  const onChangeInputHandler = e => {\n    if (e.currentTarget) {\n      setNewTask(e.currentTarget.value);\n      setError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTask,\n        onChange: onChangeInputHandler,\n        onKeyDown: onKeyInputHandler,\n        className: error ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\",\n        onClick: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"errorMessage\",\n        children: \"input is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"all\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"all\"),\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"active\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"active\"),\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"completed\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"completed\"),\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"6X8nlS3b0NCApy6yk36Qqe380S4=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Todolist","title","tasks","filteredTasks","removeTask","changeStatusTask","addTask","_s","newTask","setNewTask","error","setError","filterBtn","setFilterBtn","tasksList","length","map","t","className","isDone","children","type","checked","onChange","e","changeStatusTaskHandler","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filteredTaskAll","filterValue","taskId","currentTarget","addTaskHandler","trim","onKeyInputHandler","key","onChangeInputHandler","value","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\nimport {Button} from \"./Button\";\nimport {FilteredTasksType} from \"./App\";\n\ntype TodolistType = {\n    title: string\n    tasks: TasksType[]\n    filteredTasks: (filterValue: FilteredTasksType) => void\n    removeTask: (taskId: string) => void\n    changeStatusTask: (taskId: string, isDone: boolean) => void\n    addTask: (title: string) => void\n}\n\n\nexport const Todolist = ({title, tasks, filteredTasks, removeTask, changeStatusTask, addTask}: TodolistType) => {\n\n    const [newTask, setNewTask] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [filterBtn, setFilterBtn] = useState(\"all\")\n\n\n    const tasksList = tasks.length\n        ? tasks.map(t => {\n                return (\n                    <li key={t.id} className={t.isDone ? \"isDone\" : \"\"}>\n                        <input type=\"checkbox\" checked={t.isDone}\n                               onChange={(e) => changeStatusTaskHandler(t.id, e)}/>\n                        <span>{t.title}</span>\n                        <Button onClick={() => removeTask(t.id)} title={\"x\"}/>\n                    </li>\n                )\n            }\n        ) : <div>Todolist required</div>\n\n    const filteredTaskAll = (filterValue: FilteredTasksType) => {\n        filteredTasks(filterValue)\n        setFilterBtn(filterValue)\n    }\n    const changeStatusTaskHandler = (taskId: string, e: ChangeEvent<HTMLInputElement>) => {\n        changeStatusTask(taskId, e.currentTarget.checked)\n    }\n    const addTaskHandler = () => {\n        if (newTask.trim()) {\n            addTask(newTask.trim())\n            setNewTask(\"\")\n        } else {\n            setError(true)\n        }\n    }\n    const onKeyInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addTask(newTask)\n            setNewTask(\"\")\n        }\n    }\n    const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget) {\n            setNewTask(e.currentTarget.value)\n            setError(false)\n        }\n    }\n\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input value={newTask}\n                       onChange={onChangeInputHandler}\n                       onKeyDown={onKeyInputHandler}\n                       className={error ? \"error\" : \"\"}\n                />\n                <Button title={\"+\"} onClick={addTaskHandler}/>\n                {error && <h4 className={\"errorMessage\"}>input is empty</h4>}\n            </div>\n            <ul>\n                {tasksList}\n            </ul>\n            <div>\n                <Button className={filterBtn === \"all\" ? \"filteredBtn\" : \"\"} onClick={() => filteredTaskAll(\"all\")} title={\"All\"}/>\n                <Button className={filterBtn === \"active\" ? \"filteredBtn\" : \"\"} onClick={() => filteredTaskAll(\"active\")} title={\"Active\"}/>\n                <Button className={filterBtn === \"completed\" ? \"filteredBtn\" : \"\"} onClick={() => filteredTaskAll(\"completed\")} title={\"Completed\"}/>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}