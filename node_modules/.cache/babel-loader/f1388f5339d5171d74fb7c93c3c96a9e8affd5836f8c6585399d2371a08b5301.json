{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\nimport { v1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const todolistTitle = \"What to learn\";\n  const [todolists, setTodolists] = useState([{\n    id: v1(),\n    title: \"What to learn\",\n    filter: \"all\"\n  }, {\n    id: v1(),\n    title: \"What to learn\",\n    filter: \"all\"\n  }]);\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"React\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"Redux\",\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState(\"all\");\n  let currentTasks = tasks;\n  if (filter === \"active\") {\n    currentTasks = tasks.filter(t => !t.isDone);\n  }\n  if (filter === \"completed\") {\n    currentTasks = tasks.filter(t => t.isDone);\n  }\n  const filteredTasks = filterValue => {\n    setFilter(filterValue);\n  };\n  const removeTask = taskId => {\n    setTasks(tasks.filter(t => t.id !== taskId));\n  };\n  const changeStatusTask = (taskId, isDone) => {\n    setTasks([...tasks.map(t => t.id === taskId ? {\n      ...t,\n      isDone: isDone\n    } : t)]);\n  };\n  const addTask = title => {\n    const newTask = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    setTasks([newTask, ...tasks]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: todolistTitle,\n      tasks: currentTasks,\n      filteredTasks: filteredTasks,\n      removeTask: removeTask,\n      changeStatusTask: changeStatusTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hvdES/dSoNoQDmilvxPgVMnPTt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","jsxDEV","_jsxDEV","App","_s","todolistTitle","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","setFilter","currentTasks","t","filteredTasks","filterValue","removeTask","taskId","changeStatusTask","map","addTask","newTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./Todolist\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type TasksType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type FilteredTasksType = \"all\" | \"active\" | \"completed\"\r\n\r\ntype TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilteredTasksType\r\n}\r\n\r\nfunction App() {\r\n\r\n    const todolistTitle = \"What to learn\"\r\n\r\n    const [todolists, setTodolists] = useState<TodolistType[]>([\r\n        {id: v1(), title: \"What to learn\", filter: \"all\"},\r\n        {id: v1(), title: \"What to learn\", filter: \"all\"},\r\n    ])\r\n\r\n    const [tasks, setTasks] = useState<TasksType[]>([\r\n        {id: v1(), title: \"HTML\", isDone: true},\r\n        {id: v1(), title: \"React\", isDone: false},\r\n        {id: v1(), title: \"CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"Redux\", isDone: false},\r\n    ])\r\n\r\n    const [filter, setFilter] = useState<FilteredTasksType>(\"all\")\r\n\r\n    let currentTasks = tasks\r\n    if (filter === \"active\") {\r\n        currentTasks = tasks.filter(t => !t.isDone)\r\n    }\r\n    if (filter === \"completed\") {\r\n        currentTasks = tasks.filter(t => t.isDone)\r\n    }\r\n\r\n    const filteredTasks = (filterValue: FilteredTasksType) => {\r\n        setFilter(filterValue)\r\n    }\r\n    const removeTask = (taskId: string) => {\r\n        setTasks(tasks.filter(t => t.id !== taskId))\r\n    }\r\n    const changeStatusTask = (taskId: string, isDone: boolean) => {\r\n        setTasks([...tasks.map(t => t.id === taskId ? {...t, isDone: isDone} : t)])\r\n    }\r\n    const addTask = (title: string) => {\r\n        const newTask = {id: v1(), title: title, isDone: false}\r\n        setTasks([newTask, ...tasks])\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n                title={todolistTitle}\r\n                tasks={currentTasks}\r\n                filteredTasks={filteredTasks}\r\n                removeTask={removeTask}\r\n                changeStatusTask={changeStatusTask}\r\n                addTask={addTask}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}