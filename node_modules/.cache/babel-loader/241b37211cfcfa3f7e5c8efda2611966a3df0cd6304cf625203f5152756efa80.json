{"ast":null,"code":"var _jsxFileName = \"/Users/galyamov/Desktop/1-todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = ({\n  title,\n  tasks,\n  filteredTasks,\n  removeTask,\n  changeStatusTask,\n  addTask\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [filterBtn, setFilterBtn] = useState(\"all\");\n  const tasksList = tasks.length ? tasks.map(t => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: t.isDone,\n        onChange: e => changeStatusTaskHandler(t.id, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removeTask(t.id),\n        title: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, t.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Todolist required\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n  const filteredTaskAll = filterValue => {\n    filteredTasks(filterValue);\n  };\n  const changeStatusTaskHandler = (taskId, e) => {\n    changeStatusTask(taskId, e.currentTarget.checked);\n  };\n  const addTaskHandler = () => {\n    if (newTask.trim()) {\n      addTask(newTask.trim());\n      setNewTask(\"\");\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyInputHandler = e => {\n    if (e.key === \"Enter\") {\n      addTask(newTask);\n      setNewTask(\"\");\n    }\n  };\n  const onChangeInputHandler = e => {\n    if (e.currentTarget) {\n      setNewTask(e.currentTarget.value);\n      setError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTask,\n        onChange: onChangeInputHandler,\n        onKeyDown: onKeyInputHandler,\n        className: error ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\",\n        onClick: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"errorMessage\",\n        children: \"input is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: filterBtn === \"all\" ? \"filteredBtn\" : \"\",\n        onClick: () => filteredTaskAll(\"all\"),\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"active\"),\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => filteredTaskAll(\"completed\"),\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"6X8nlS3b0NCApy6yk36Qqe380S4=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Todolist","title","tasks","filteredTasks","removeTask","changeStatusTask","addTask","_s","newTask","setNewTask","error","setError","filterBtn","setFilterBtn","tasksList","length","map","t","children","type","checked","isDone","onChange","e","changeStatusTaskHandler","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filteredTaskAll","filterValue","taskId","currentTarget","addTaskHandler","trim","onKeyInputHandler","key","onChangeInputHandler","value","onKeyDown","className","_c","$RefreshReg$"],"sources":["/Users/galyamov/Desktop/1-todolist/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\nimport {Button} from \"./Button\";\nimport {FilteredTasksType} from \"./App\";\n\ntype TodolistType = {\n    title: string\n    tasks: TasksType[]\n    filteredTasks: (filterValue: FilteredTasksType) => void\n    removeTask: (taskId: string) => void\n    changeStatusTask: (taskId: string, isDone: boolean) => void\n    addTask: (title: string) => void\n}\n\nexport type TasksType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\n\nexport const Todolist = ({title, tasks, filteredTasks, removeTask, changeStatusTask, addTask}: TodolistType) => {\n\n    const [newTask, setNewTask] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [filterBtn, setFilterBtn] = useState(\"all\")\n\n\n    const tasksList = tasks.length\n        ? tasks.map(t => {\n                return (\n                    <li key={t.id}>\n                        <input type=\"checkbox\" checked={t.isDone}\n                               onChange={(e) => changeStatusTaskHandler(t.id, e)}/>\n                        <span>{t.title}</span>\n                        <Button onClick={() => removeTask(t.id)} title={\"x\"}/>\n                    </li>\n                )\n            }\n        ) : <div>Todolist required</div>\n\n    const filteredTaskAll = (filterValue: FilteredTasksType) => {\n        filteredTasks(filterValue)\n    }\n    const changeStatusTaskHandler = (taskId: string, e: ChangeEvent<HTMLInputElement>) => {\n        changeStatusTask(taskId, e.currentTarget.checked)\n    }\n    const addTaskHandler = () => {\n        if (newTask.trim()) {\n            addTask(newTask.trim())\n            setNewTask(\"\")\n        } else {\n            setError(true)\n        }\n    }\n    const onKeyInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addTask(newTask)\n            setNewTask(\"\")\n        }\n    }\n    const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget) {\n            setNewTask(e.currentTarget.value)\n            setError(false)\n        }\n    }\n\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input value={newTask}\n                       onChange={onChangeInputHandler}\n                       onKeyDown={onKeyInputHandler}\n                       className={error ? \"error\" : \"\"}\n                />\n                <Button title={\"+\"} onClick={addTaskHandler}/>\n                {error && <h4 className={\"errorMessage\"}>input is empty</h4>}\n            </div>\n            <ul>\n                {tasksList}\n            </ul>\n            <div>\n                <Button className={filterBtn === \"all\" ? \"filteredBtn\" : \"\"} onClick={() => filteredTaskAll(\"all\")} title={\"All\"}/>\n                <Button onClick={() => filteredTaskAll(\"active\")} title={\"Active\"}/>\n                <Button onClick={() => filteredTaskAll(\"completed\")} title={\"Completed\"}/>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}