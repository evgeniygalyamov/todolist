{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import{Todolist}from\"./Todolist\";import{v1}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const todolistTitle=\"What to learn\";const[tasks,setTasks]=useState([{id:v1(),title:\"HTML\",isDone:true},{id:v1(),title:\"React\",isDone:false},{id:v1(),title:\"CSS\",isDone:true},{id:v1(),title:\"JS\",isDone:true},{id:v1(),title:\"Redux\",isDone:false}]);const[filter,setFilter]=useState(\"all\");let currentTasks=tasks;if(filter===\"active\"){currentTasks=tasks.filter(t=>!t.isDone);}if(filter===\"completed\"){currentTasks=tasks.filter(t=>t.isDone);}const filteredTasks=filterValue=>{setFilter(filterValue);};const removeTask=taskId=>{setTasks(tasks.filter(t=>t.id!==taskId));};const changeStatusTask=(taskId,isDone)=>{setTasks([...tasks.map(t=>t.id===taskId?{...t,isDone:isDone}:t)]);};const addTask=title=>{const newTask={id:v1(),title:title,isDone:false};setTasks([newTask,...tasks]);};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Todolist,{title:todolistTitle,tasks:currentTasks,filteredTasks:filteredTasks,removeTask:removeTask,changeStatusTask:changeStatusTask,addTask:addTask})});}export default App;","map":{"version":3,"names":["React","useState","Todolist","v1","jsx","_jsx","App","todolistTitle","tasks","setTasks","id","title","isDone","filter","setFilter","currentTasks","t","filteredTasks","filterValue","removeTask","taskId","changeStatusTask","map","addTask","newTask","className","children"],"sources":["/Users/galyamov/Documents/INCUBATOR/Front-end/todolist/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TasksType, Todolist} from \"./Todolist\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type FilteredTasksType = \"all\" | \"active\" | \"completed\"\r\n\r\nfunction App() {\r\n\r\n    const todolistTitle = \"What to learn\"\r\n\r\n    const [tasks, setTasks] = useState<TasksType[]>([\r\n        {id: v1(), title: \"HTML\", isDone: true},\r\n        {id: v1(), title: \"React\", isDone: false},\r\n        {id: v1(), title: \"CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"Redux\", isDone: false},\r\n    ])\r\n\r\n    const [filter, setFilter] = useState<FilteredTasksType>(\"all\")\r\n\r\n    let currentTasks = tasks\r\n    if (filter === \"active\") {\r\n        currentTasks = tasks.filter(t => !t.isDone)\r\n    }\r\n    if (filter === \"completed\") {\r\n        currentTasks = tasks.filter(t => t.isDone)\r\n    }\r\n\r\n    const filteredTasks = (filterValue: FilteredTasksType) => {\r\n        setFilter(filterValue)\r\n    }\r\n    const removeTask = (taskId: string) => {\r\n        setTasks(tasks.filter(t => t.id !== taskId))\r\n    }\r\n    const changeStatusTask = (taskId: string, isDone: boolean) => {\r\n        setTasks([...tasks.map(t => t.id === taskId ? {...t, isDone: isDone} : t)])\r\n    }\r\n    const addTask = (title: string) => {\r\n        const newTask = {id: v1(), title: title, isDone: false}\r\n        setTasks([newTask, ...tasks])\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n                title={todolistTitle}\r\n                tasks={currentTasks}\r\n                filteredTasks={filteredTasks}\r\n                removeTask={removeTask}\r\n                changeStatusTask={changeStatusTask}\r\n                addTask={addTask}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,WAAW,CAClB,OAAmBC,QAAQ,KAAO,YAAY,CAC9C,OAAQC,EAAE,KAAO,MAAM,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAIxB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEX,KAAM,CAAAC,aAAa,CAAG,eAAe,CAErC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAc,CAC5C,CAACS,EAAE,CAAEP,EAAE,CAAC,CAAC,CAAEQ,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,IAAI,CAAC,CACvC,CAACF,EAAE,CAAEP,EAAE,CAAC,CAAC,CAAEQ,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,KAAK,CAAC,CACzC,CAACF,EAAE,CAAEP,EAAE,CAAC,CAAC,CAAEQ,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,IAAI,CAAC,CACtC,CAACF,EAAE,CAAEP,EAAE,CAAC,CAAC,CAAEQ,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,IAAI,CAAC,CACrC,CAACF,EAAE,CAAEP,EAAE,CAAC,CAAC,CAAEQ,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,KAAK,CAAC,CAC5C,CAAC,CAEF,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAoB,KAAK,CAAC,CAE9D,GAAI,CAAAc,YAAY,CAAGP,KAAK,CACxB,GAAIK,MAAM,GAAK,QAAQ,CAAE,CACrBE,YAAY,CAAGP,KAAK,CAACK,MAAM,CAACG,CAAC,EAAI,CAACA,CAAC,CAACJ,MAAM,CAAC,CAC/C,CACA,GAAIC,MAAM,GAAK,WAAW,CAAE,CACxBE,YAAY,CAAGP,KAAK,CAACK,MAAM,CAACG,CAAC,EAAIA,CAAC,CAACJ,MAAM,CAAC,CAC9C,CAEA,KAAM,CAAAK,aAAa,CAAIC,WAA8B,EAAK,CACtDJ,SAAS,CAACI,WAAW,CAAC,CAC1B,CAAC,CACD,KAAM,CAAAC,UAAU,CAAIC,MAAc,EAAK,CACnCX,QAAQ,CAACD,KAAK,CAACK,MAAM,CAACG,CAAC,EAAIA,CAAC,CAACN,EAAE,GAAKU,MAAM,CAAC,CAAC,CAChD,CAAC,CACD,KAAM,CAAAC,gBAAgB,CAAGA,CAACD,MAAc,CAAER,MAAe,GAAK,CAC1DH,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACc,GAAG,CAACN,CAAC,EAAIA,CAAC,CAACN,EAAE,GAAKU,MAAM,CAAG,CAAC,GAAGJ,CAAC,CAAEJ,MAAM,CAAEA,MAAM,CAAC,CAAGI,CAAC,CAAC,CAAC,CAAC,CAC/E,CAAC,CACD,KAAM,CAAAO,OAAO,CAAIZ,KAAa,EAAK,CAC/B,KAAM,CAAAa,OAAO,CAAG,CAACd,EAAE,CAAEP,EAAE,CAAC,CAAC,CAAEQ,KAAK,CAAEA,KAAK,CAAEC,MAAM,CAAE,KAAK,CAAC,CACvDH,QAAQ,CAAC,CAACe,OAAO,CAAE,GAAGhB,KAAK,CAAC,CAAC,CACjC,CAAC,CAED,mBACIH,IAAA,QAAKoB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBrB,IAAA,CAACH,QAAQ,EACLS,KAAK,CAAEJ,aAAc,CACrBC,KAAK,CAAEO,YAAa,CACpBE,aAAa,CAAEA,aAAc,CAC7BE,UAAU,CAAEA,UAAW,CACvBE,gBAAgB,CAAEA,gBAAiB,CACnCE,OAAO,CAAEA,OAAQ,CACpB,CAAC,CACD,CAAC,CAEd,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}